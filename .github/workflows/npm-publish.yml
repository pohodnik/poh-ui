# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  release:name: NPM Publish

    on:
      release:
        types: [ created ]
      push:
        branches: [ master ]
      pull_request:
        types: [ closed ]

    jobs:
      build:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2

          - name: Set git user for commit new version
            run: |
              git config --global user.name "Pohodnik NPM Publisher"
              git config --global user.email pohodnik58@gmail.com

          - name: Check if minor version ${{ github.event.head_commit.message }}
            if: |
              contains(github.event.head_commit.message, 'minor' )
            run: echo "NEWVER=$(npm version minor)" >> $GITHUB_ENV

          - name: Check if major version ${{ github.event.head_commit.message }}
            if: |
              contains(github.event.head_commit.message, 'major' )
            run: echo "NEWVER=$(npm version major)" >> $GITHUB_ENV

          - name: Check if fallback patch version  ${{ github.event.head_commit.message }}
            if: |
              !contains(github.event.head_commit.message, 'major') &&
              !contains(github.event.head_commit.message, 'minor')
            run: echo "NEWVER=$(npm version patch)" >> $GITHUB_ENV

          - name: Final version type ${{ env.NEWVER }}
            run: echo ${{ env.NEWVER }}

          - name: Pushing new version to git
            run: |
              git push
              git push --tags

          - name: Prepare NPM
            run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" >> ./.npmrc

          - name: Publish npm package
            run: npm publish --access public

          - name: Send telegramm notofication
            run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_TO }} -d parse_mode=html -d text="$MESSAGE" >> /dev/null
            env:
              MESSAGE: |
                <b>webpack-config</b> ${{ env.NEWVER }} ready!
                <code>yarn upgrade @pohodnik/webpack-config --latest</code>
                <i>${{ github.event.head_commit.message }}</i>
                ${{ github.actor }}
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
